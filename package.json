{
  "name": "auto-commit-msg",
  "displayName": "Auto Commit Message",
  "description": "Generate git commit messages automagically",
  "version": "0.7.0",
  "publisher": "MichaelCurrin",
  "homepage": "https://github.com/MichaelCurrin/auto-commit-msg#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/MichaelCurrin/auto-commit-msg"
  },
  "bugs": "https://github.com/MichaelCurrin/auto-commit-msg/issues",
  "license": "MIT",
  "keywords": [
    "git",
    "auto",
    "generate",
    "commit",
    "message",
    "vs-code"
  ],
  "engines": {
    "vscode": "^1.39.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#f0efe7",
    "theme": "light"
  },
  "activationEvents": [
    "onCommand:commitMsg.setMessage"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "commitMsg",
      "properties": {
        "commitMsg.pattern": {
          "type": "string",
          "default": "(.*)",
          "description": "A regular expression to extract from branch name. Should match entire branch."
        },
        "commitMsg.patternIgnoreCase": {
          "type": "boolean",
          "default": false,
          "description": "Ignore case in pattern."
        },
        "commitMsg.replacementIsFunction": {
          "type": "boolean",
          "default": false,
          "description": "Replacement string is a function return expression with parameters (p1, p2, p3...) matching patterns."
        },
        "commitMsg.replacement": {
          "type": "string",
          "default": "[$1] ",
          "description": "Content to place in commit message."
        }
      }
    },
    "commands": [
      {
        "command": "commitMsg.setMessage",
        "title": "Auto Commit Message",
        "icon": {
          "dark": "images/message.svg",
          "light": "images/message-light.svg"
        }
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "commitMsg.setMessage",
          "when": "scmProvider == git",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint . --ext .ts",
    "clean": "rm -rf ./out/*",
    "compile": "npm run clean && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "cd out && mocha",
    "vscode:prepublish": "npm run compile",
    "build": "vsce package --out build/",
    "ext": "npm run build && code --install-extension $(find build/* | sort -r | head -n1)"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.1",
    "@types/vscode": "^1.39.0",
    "@typescript-eslint/eslint-plugin": "^3.9.0",
    "@typescript-eslint/parser": "^3.9.0",
    "eslint": "^7.6.0",
    "mocha": "^6.2.3",
    "source-map-support": "^0.5.12",
    "tslint": "^5.20.1",
    "typescript": "^3.6.4",
    "vsce": "^1.78.0",
    "vscode-test": "^1.2.0"
  }
}
